
Процедура ПолнаяФормаСпецификацииПриИзменении(Элемент)
	//Если ТипСпецификации тогда
	//	ЭлементыФормы.ОписаниеСпецификации.Колонки.ДопИнфо1.Видимость=Истина ;
	//Иначе
	//	ЭлементыФормы.ОписаниеСпецификации.Колонки.ДопИнфо1.Видимость=Ложь ;
	//КонецЕсли;
КонецПроцедуры

Процедура ЗагрузитьШаблонНажатие(Элемент)
	ТекстСФормы=ВанМаркет.ПолучитьПустоеЗначениеHTMLПоля(ЭлементыФормы.ПолеHTMLДокумента1);
	Если ЗначениеЗаполнено(ТекстСФормы) тогда
		Если Вопрос("Текст документа будет очищен и будет загружен стандартный шаблон договора!",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Нет тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если ЭлементыФормы.РедактированиеHTML.Значение   тогда
		ЭлементыФормы.ПолеHTMLДокумента1.УстановитьРежим(РежимПоляHTMLДокумента.Просмотр);
		ЭлементыФормы.РедактированиеHTML.Значение=Ложь;
	КонецЕсли;
	
	СтруктураЗакладок=Новый Структура;
	
	ВанМаркет.ЗаполнитьСтруктуруЗакладок(СтруктураЗакладок,Контрагент,Организация,Дата,Номер);
	СтруктураЗакладок.Вставить("НомерДоговораОснования",ДокументОснование.Номер);
	СтруктураЗакладок.НомерДоговора=Номер;
	
	
	ФормСтрока = "Л = ru_RU; ДП = Ложь";
	ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
	СтруктураЗакладок.Вставить("СтоимостьПартииТовараОбщая",ЧислоПрописью(ОписаниеСпецификации.Итог("Сумма"), ФормСтрока, ПарПредмета));
	//	СтруктураЗакладок.Вставить("ДоговорПоставкиСДатой",""+ДокументОснование.Номер+" от "+Формат(ДокументОснование.Дата,"ДФ=dd.MM.yyyy"));
	СтруктураЗакладок.Вставить("ДоговорПоставкиСДатой",""+ДоговорКонтрагента.Код);//+" от "+Формат(ДокументОснование.Дата,"ДФ=dd.MM.yyyy"));
	
	
	
	АктивныйДокумент = ПолучитьМакет("МакетСпецификации");
	КомОбъект = АктивныйДокумент.Получить();
	//	КомОбъект.Application.Visible=1;
	Для каждого Элемент Из СтруктураЗакладок Цикл
		
		
		КомОбъект.Bookmarks(Элемент.Ключ).Select();
		КомОбъект.Application.Selection.TypeText(СокрЛП(Элемент.Значение));
	КонецЦикла;
	
	КомОбъект.Bookmarks("НачалоТаблицы").Select(); //Где ff - это набор любых символов, вплоть до непечатаемых;)
	//Конец Варианта №2
	
	Табл= КомОбъект.Application.Selection.Range;
	//Формируем заголовок:
	ТаблицаКолонок=ЭлементыФормы.ОписаниеСпецификации.Колонки;	//	ТаблицаКолонок=ОписаниеСпецификации.Выгрузить();
	//ТаблицаКолонок
	СписокКолонок="";   
	Для каждого Элемент из ТаблицаКолонок цикл
		Если Элемент.Видимость=Ложь или  Элемент.Имя ="НомерСтроки" тогда
			Продолжить;
		КонецЕсли;
		СписокКолонок=СписокКолонок+Элемент.ТекстШапки+"*";
		
		//Табл.InsertAfter("Сумма*Валюта*Назначение*Дата долга*Вид документа*Номер документа* *Дата оплаты");
		
	КонецЦикла;
	СписокКолонок=Лев(СписокКолонок,СтрДлина(СписокКолонок)-1);
	Если ЗначениеЗаполнено(СписокКолонок) тогда	
		Табл.InsertAfter(СписокКолонок);
		Табл.InsertParagraphAfter();
		//сама таблица
		Для Каждого ЭлементТаблицы Из ОписаниеСпецификации Цикл
			// ВыводимКолонки
			СписокКолонок="";
			Для каждого Элемент из ТаблицаКолонок цикл
				Если Элемент.Видимость=Ложь или  Элемент.Имя ="НомерСтроки" тогда
					Продолжить;
				КонецЕсли;
				СписокКолонок=СписокКолонок+СокрЛП(ЭлементТаблицы[Элемент.Имя])+"*";
				
			КонецЦикла;
			
			СписокКолонок=Лев(СписокКолонок,СтрДлина(СписокКолонок)-1);
			Табл.InsertAfter(СписокКолонок);
			Табл.InsertParagraphAfter();
		КонецЦикла;
		
		Табл.ConvertToTable("*");
	КонецЕсли;
	
	
	//Происходит конвертация строки в таблицу
	
	//не нравятся звездочки - используйте другой символ
	КомОбъект.Tables(1).AutoFormat(16);
	
	//КомОбъект.Application.Visible = Истина;
	ИмяФайлаHTML = ПолучитьИмяВременногоФайла("HTML");	
	КомОбъект.SaveAs2(ИмяФайлаHTML,8);
	//КомОбъект.Application.quit();
	
	ЭлементыФормы.ПолеHTMLДокумента1.Перейти(ИмяФайлаHTML);
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура РедактированиеHTMLПриИзменении(Элемент)
	пТекстНовостиHTML = ЭлементыФормы.ПолеHTMLДокумента1.ПолучитьТекст();    
	
	
	Если ЭлементыФормы.РедактированиеHTML.Значение тогда
		ЭлементыФормы.ПолеHTMLДокумента1.УстановитьРежим(РежимПоляHTMLДокумента.Редактирование);
	Иначе
		ЭлементыФормы.ПолеHTMLДокумента1.УстановитьРежим(РежимПоляHTMLДокумента.Просмотр);
		
		ДанныеТекстаДоговора=Новый   ХранилищеЗначения(пТекстНовостиHTML);
	КонецЕсли;
	ЭлементыФормы.ПолеHTMLДокумента1.УстановитьТекст(пТекстНовостиHTML);
	
КонецПроцедуры

Процедура ПриОткрытии()
	//rurai 01.10.2020
	Если ЭтоНовый() тогда
		СтатусДокумента=Перечисления.СтатусыДокументаДоговор.ВРаботе;
		НазваниеДоговора="Новый";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДоговорКонтрагента) и Не ЭтоНовый() тогда
		ДоговорКонтрагента=Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(ДокументОснование.УникальныйИндификаторДоговора);
		Сообщить("Заполнили пустой договор контрагента..");
	КонецЕсли;
	
	ЭтаФорма.ТолькоПросмотр=Не ВанМаркет.ПроверкаДоступности("Юрист",Перечисления.СтатусыДокументаДоговор.ВРаботе,СтатусДокумента,ЭтоНовый());
	Если НЕ РольДоступна("ПолныеПрава") тогда
		//
		//Если ДокументОснование.СтатусДокумента=Перечисления.СтатусыДокументаДоговор.ВРаботе тогда
		//	ЭтаФорма.ТолькоПросмотр=Ложь;
		//Иначе
		//	ЭтаФорма.ТолькоПросмотр=Истина;
		//КонецЕсли;
	КонецЕсли;
	ЭлементыФормы.ЗагрузитьШаблон.Доступность=Не ЭтаФорма.ТолькоПросмотр;
	ЭлементыФормы.РедактированиеHTML.Доступность=Не ЭтаФорма.ТолькоПросмотр;	
	//rurai
	ЗагрузитьСохраненныеДанныеВФорму();
	
КонецПроцедуры

Процедура ЗагрузитьСохраненныеДанныеВФорму()
	ДвоичныеДанные = ДанныеТекстаСпецификации.Получить();
	Если ДвоичныеДанные<>Неопределено тогда
		ЭлементыФормы.ПолеHTMLДокумента1.УстановитьТекст(ДвоичныеДанные);
		
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ТекстСФормы=ВанМаркет.ПолучитьПустоеЗначениеHTMLПоля(ЭлементыФормы.ПолеHTMLДокумента1);
	Если ЗначениеЗаполнено(ТекстСФормы) тогда
		
		ДанныеТекстаСпецификации=Новый   ХранилищеЗначения(ЭлементыФормы.ПолеHTMLДокумента1.ПолучитьТекст());
	КонецЕсли;
	
	Если СтатусДокумента=Перечисления.СтатусыДокументаДоговор.Завершен и РежимЗаписи=РежимЗаписиДокумента.Проведение тогда
		
		УникИдДоговора=ДокументОснование.УникальныйИндификаторДоговора;
		Если ЗначениеЗаполнено(УникИдДоговора) тогда
			СпрДоговора=Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(УникИдДоговора);   
		Иначе
			Сообщить("Не найден договор! Необходимо записать документ "+ДокументОснование+" в статусе Закрыт");
			Возврат ;
		КонецЕсли;
		ТекстДляЗаписи=Новый ТекстовыйДокумент  ;
		ТекстДляЗаписи.УстановитьТекст(ЭлементыФормы.ПолеHTMLДокумента1.ПолучитьТекст());
		ИмяФайлаHTML = ПолучитьИмяВременногоФайла("HTML");
		ТекстДляЗаписи.Записать(ИмяФайлаHTML);
		ИмяВрФайлаPdf="";
		ВанМаркет.СоздатьPDFФайл(ИмяФайлаHTML,ИмяВрФайлаPdf) ;
		ВанМаркет.ПрикрепитьФайлКСправочнику(СпрДоговора,ИмяВрФайлаPdf,УникальныйИндификаторВложенияСпецификации,"СпецификацияКДог");//+ДокументОснование.Номер+"от"+Формат(ДокументОснование.Дата,"ДФ=dd.MM.yyyy"
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ЭтоНовый() и ДокументОснование=Документы.Договора.ПустаяСсылка() тогда
		Сообщить("Новый документ можно ввести только из документа Договор");
		Отказ=Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатусДокументаПриИзменении(Элемент)
	Если СтатусДокумента=Перечисления.СтатусыДокументаДоговор.Завершен  и Не ЗначениеЗаполнено(ДоговорКонтрагента) тогда
		Сообщить("Невозможно установить статус Завершен при пустом поле договор!");
		СтатусДокумента=Перечисления.СтатусыДокументаДоговор.ВРаботе;
	КонецЕсли;
	
КонецПроцедуры





